/* eslint-disable @next/next/no-img-element */
import type { NextPage } from 'next';
import Head from 'next/head';
import * as S from './styles';

import { MoonIcon } from '../components/icons/Moon';
import { useTheme } from '../context/ThemeContext';
import { SunIcon } from '../components/icons/Sun';
import { LocationIcon } from '../components/icons/Location';
import { TwitterIcon } from '../components/icons/Twitter';
import { CompanyIcon } from '../components/icons/Company';
import { LinkIcon } from '../components/icons/Link';
import { useEffect, useState } from 'react';
import { api } from '../service/api';
import { SectionSearch } from '../components/SectionSearch';
import Header from '../components/Header';
import { Card } from '../components/Card';

export interface IUserData {
  avatar_url?: string;
  blog?: string;
  company?: string;
  followers?: string;
  following?: string;
  formattedDate?: string;
  public_repos?: string;
  twitter_username?: string;
  user_name?: string;
  name?: string;
  login?: string;
  bio?: string;
  location?: string;
  created_at?: string;
}

const Home: NextPage = () => {
  const [user, setUser] = useState<string>('octocat');
  const [userData, setUserData] = useState<IUserData>({});
  const [error, setError] = useState('');

  useEffect(() => {
    fetchFirstUser();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  const fetchFirstUser = async () => {
    try {
      const { data } = await api.get<IUserData>(`users/${user}`);

      const createdAt = data.created_at!;

      const formattedData = {
        ...data,
        formattedDate: new Date(createdAt)
          .toLocaleDateString('en-GB', {
            day: 'numeric',
            year: 'numeric',
            month: 'short',
          })
          .replace(',', ''),
      };
      setError('');
      setUserData(formattedData);
    } catch (error) {
      setError('Not results');
    }
  };

  const handleClick = async () => {
    try {
      const { data } = await api.get(`users/${user}`);
      console.log(data);

      const formattedData = {
        ...data,
        formattedDate: new Date(data.created_at)
          .toLocaleDateString('en-GB', {
            day: 'numeric',
            month: 'short',
            year: 'numeric',
          })
          .replace(',', ''),
      };
      setError('');

      setUserData(formattedData);
    } catch (error) {
      console.log(error);
      setError('Not results');
    }
  };

  return (
    <div>
      <Head>
        <title>devFinder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />

        <link rel="shortcut icon" href="favicon-32x32.png" />
        <link rel="apple-touch-icon" href="favicon-32x32.png" />
      </Head>
      <S.Container>
        <S.Main>
          <Header />
          <SectionSearch
            user={user}
            error={error}
            setUser={setUser}
            handleClick={handleClick}
          />
          <Card userData={userData} />
        </S.Main>
      </S.Container>
    </div>
  );
};

export default Home;
